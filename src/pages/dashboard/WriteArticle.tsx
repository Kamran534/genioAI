import { useState } from 'react';
import { Send, FileText, Clock, Users } from 'lucide-react';

export default function WriteArticle() {
  const [articleTitle, setArticleTitle] = useState('');
  const [articleContent, setArticleContent] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);

  const handleGenerateArticle = async () => {
    setIsGenerating(true);
    // Simulate API call
    setTimeout(() => {
      setArticleContent('This is a sample generated article content. In a real application, this would be generated by AI based on the title and any additional parameters you provide.');
      setIsGenerating(false);
    }, 2000);
  };

  const recentArticles = [
    { id: 1, title: 'The Future of AI in Content Creation', date: '2 hours ago', status: 'Published' },
    { id: 2, title: 'Best Practices for SEO Writing', date: '1 day ago', status: 'Draft' },
    { id: 3, title: 'How to Write Engaging Blog Posts', date: '3 days ago', status: 'Published' },
  ];

  return (
    <>
      {/* Page header */}
      {/* <div className="mb-8">
        <h1 className="text-2xl font-semibold text-gray-900 flex items-center">
          <PenTool className="h-6 w-6 mr-3 text-purple-600" />
          Write Article
        </h1>
        <p className="mt-2 text-sm text-gray-700">
          Create engaging articles with AI-powered content generation.
        </p>
      </div> */}

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Article Creation Form */}
        <div className="lg:col-span-2">
          <div className="bg-white shadow rounded-lg">
            <div className="px-4 py-5 sm:p-6">
              <h3 className="text-lg leading-6 font-medium text-gray-900 mb-4">Create New Article</h3>
              
              <div className="space-y-4">
                <div>
                  <label htmlFor="article-title" className="block text-sm font-medium text-gray-700 mb-2">
                    Article Title
                  </label>
                  <input
                    type="text"
                    id="article-title"
                    value={articleTitle}
                    onChange={(e) => setArticleTitle(e.target.value)}
                    className="block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500 sm:text-sm"
                    placeholder="Enter your article title..."
                  />
                </div>

                <div>
                  <label htmlFor="article-content" className="block text-sm font-medium text-gray-700 mb-2">
                    Article Content
                  </label>
                  <textarea
                    id="article-content"
                    rows={12}
                    value={articleContent}
                    onChange={(e) => setArticleContent(e.target.value)}
                    className="block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500 sm:text-sm"
                    placeholder="Start writing your article or let AI generate content for you..."
                  />
                </div>

                <div className="flex justify-between items-center">
                  <div className="flex space-x-3">
                    <button
                      onClick={handleGenerateArticle}
                      disabled={!articleTitle || isGenerating}
                      className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      {isGenerating ? (
                        <>
                          <div className="animate-spin -ml-1 mr-2 h-4 w-4 border-2 border-white border-t-transparent rounded-full"></div>
                          Generating...
                        </>
                      ) : (
                        <>
                          <Send className="h-4 w-4 mr-2" />
                          Generate with AI
                        </>
                      )}
                    </button>
                    
                    <button className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500">
                      <FileText className="h-4 w-4 mr-2" />
                      Save Draft
                    </button>
                  </div>

                  <div className="text-sm text-gray-500">
                    {articleContent.length} characters
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Sidebar */}
        <div className="space-y-6">
          {/* Article Stats */}
          <div className="bg-white shadow rounded-lg">
            <div className="px-4 py-5 sm:p-6">
              <h3 className="text-lg leading-6 font-medium text-gray-900 mb-4">Article Stats</h3>
              <div className="space-y-3">
                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <FileText className="h-5 w-5 text-gray-400 mr-2" />
                    <span className="text-sm text-gray-600">Word Count</span>
                  </div>
                  <span className="text-sm font-medium text-gray-900">
                    {articleContent.split(' ').filter(word => word.length > 0).length}
                  </span>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <Clock className="h-5 w-5 text-gray-400 mr-2" />
                    <span className="text-sm text-gray-600">Reading Time</span>
                  </div>
                  <span className="text-sm font-medium text-gray-900">
                    {Math.ceil(articleContent.split(' ').filter(word => word.length > 0).length / 200)} min
                  </span>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <Users className="h-5 w-5 text-gray-400 mr-2" />
                    <span className="text-sm text-gray-600">Target Audience</span>
                  </div>
                  <span className="text-sm font-medium text-gray-900">General</span>
                </div>
              </div>
            </div>
          </div>

          {/* Recent Articles */}
          <div className="bg-white shadow rounded-lg">
            <div className="px-4 py-5 sm:p-6">
              <h3 className="text-lg leading-6 font-medium text-gray-900 mb-4">Recent Articles</h3>
              <div className="space-y-3">
                {recentArticles.map((article) => (
                  <div key={article.id} className="border-l-4 border-purple-200 pl-3">
                    <p className="text-sm font-medium text-gray-900">{article.title}</p>
                    <div className="flex items-center justify-between mt-1">
                      <span className="text-xs text-gray-500">{article.date}</span>
                      <span className={`text-xs px-2 py-1 rounded-full ${
                        article.status === 'Published' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {article.status}
                      </span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
